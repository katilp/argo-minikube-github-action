name: CI
on:
  - pull_request
jobs:
  job1:
    env:
      MYENV: myenv_value`pwd`
    runs-on: ubuntu-latest
    name: argo example workflow on minikube with output
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Set up persistent volume and storage pod
      run: |
        kubectl apply -f pv-volume.yaml 
        echo MYENV $MYENV
    - name: Set up argo
      run: |
        kubectl create ns argo
        kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo/stable/manifests/quick-start-postgres.yaml
        curl -sLO https://github.com/argoproj/argo/releases/download/v2.10.0-rc3/argo-linux-amd64
        chmod +x argo-linux-amd64 
        # $HOME : /home/runner
        # whoami : runner
        # pwd : /home/runner/work/argo-minikube-github-action/argo-minikube-github-action
        here=`pwd`
        mkdir bin
        export PATH="$here/bin:$PATH"
        echo $PATH
        echo MYENV $MYENV
        mv ./argo-linux-amd64 bin/argo
        argo version
    - name: Submit the argo test workflow
      run: |
        here=`pwd`
        export PATH="$here/bin:$PATH"
        argo submit -n argo  --wait volumetest.yaml
        argo get -n argo @latest
    - name: Check the output
      run: |
        here=`pwd`
        export PATH="$here/bin:$PATH"
        argo logs -n argo @latest
        echo Check node with minikube ssh "ls -l /mnt/data" :
        minikube ssh "ls -l /mnt/data"
        mkdir outputs
        echo Copy file with kubectl cp task-pv-pod:/mnt/data/test.txt test.txt :
        kubectl cp task-pv-pod:/mnt/data/test.txt outputs/test.txt 
        echo ls -l :
        ls -l
    - name: Upload the ouput as a github artifact
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: outputs/       
