name: CI
on:
  - pull_request
jobs:
  job1:
    runs-on: ubuntu-latest
    name: build example and deploy to minikube
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster !
      run: kubectl get pods -A
    - name: Create the shared volume on the minikube node
      run: | 
        minikube ssh "sudo mkdir /mnt/data"
    - name: Set persistent volume and storage pod
      run: |
        kubectl apply -f pv-volume.yaml   
    - name: Setup argo
      run: |
        kubectl create ns argo
        kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo/stable/manifests/quick-start-postgres.yaml
        curl -sLO https://github.com/argoproj/argo/releases/download/v2.10.0-rc3/argo-linux-amd64
        chmod +x argo-linux-amd64 
        # $HOME : /home/runner
        # whoami : runner
        # pwd : /home/runner/work/argo-minikube-github-action/argo-minikube-github-action
        here=`pwd`
        mkdir bin
        ls -l
        export PATH="$here/bin:$PATH"
        echo $PATH
        mv ./argo-linux-amd64 bin/argo
        argo version
    - name: Verify images
      run: |
        echo pwd
        pwd
        echo ls -l
        ls -l
        export SHELL=/bin/bash
        eval $(minikube -p minikube docker-env)
        #docker build -f ./Dockerfile -t local/example .
        echo -n "verifying images:"
        docker images
    - name: Submit the argo test workflow
      run: |
        echo pwd
        pwd
        echo ls -l
        ls -l
        here=`pwd`
        export PATH="$here/bin:$PATH"
        argo submit -n argo --watch volumetest.yaml
        argo list -n argo
        argo get -n argo @latest
        argo logs -n argo @latest
    - name: Check the output
      run: |
        here=`pwd`
        export PATH="$here/bin:$PATH"
        argo logs -n argo @latest
        minikube ssh "ls -l /mnt/data"
